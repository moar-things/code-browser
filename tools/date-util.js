#!/usr/bin/env node

'use strict'

// run with no arguments, it prints the current time in millis to stdout

// otherwise, run with two arguments - file name, and message string

// file name should be a file with a millisecond time in it, like generated by
// this tool itself.

// message string should be the message printed to stdout, where %s is
// replaced with the difference of now and the time in the file, in seconds

const fs = require('fs')

const prevDateFile = process.argv[2]
const message = process.argv[3]

if (prevDateFile == null) {
  console.log(Date.now())
  process.exit(0)
}

const prevDate = fs.readFileSync(prevDateFile, 'utf8')
const prevDateNumber = parseInt(prevDate, 10)
if (isNaN(prevDateNumber)) {
  console.error(`expecting a millisecond time value as argument, not "${prevDate}"`)
  process.exit(1)
}

const diff = (Date.now() - prevDateNumber) / 1000
console.log(message.replace('%s', diff))
